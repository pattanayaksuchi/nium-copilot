modules = ["nodejs-20", "web", "python-3.12"]
[agent]
expertMode = true

[nix]
channel = "stable-25_05"
packages = ["glibcLocales", "libxcrypt", "xcodebuild", "zlib"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Backend"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Frontend"

[[workflows.workflow]]
name = "Backend"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python main_simple.py"
waitForPort = 8000

[workflows.workflow.metadata]
outputType = "console"

[[workflows.workflow]]
name = "Frontend"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd frontend && npm run dev -- -p 5000"
waitForPort = 5000

[workflows.workflow.metadata]
outputType = "webview"

[[ports]]
localPort = 3000
externalPort = 3001

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 8000
externalPort = 8000

[deployment]
deploymentTarget = "vm"
# Build both the backend and the Next.js production bundle. The root
# `npm run build` script installs dependencies and emits `frontend/.next`
# so the supervisor can serve the compiled frontend without rebuilding at
# runtime.
build = ["npm", "run", "build"]
# Keep the supervisor entrypoint so it can reuse the freshly built
# frontend bundle while managing both services.
run = ["npm", "start"]
